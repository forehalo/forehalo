/**
 * Customize default theme styling by overriding CSS variables:
 * https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * Colors
 *
 * Each colors have exact same color scale system with 3 levels of solid
 * colors with different brightness, and 1 soft color.
 *
 * - `XXX-1`: The most solid color used mainly for colored text. It must
 *   satisfy the contrast ratio against when used on top of `XXX-soft`.
 *
 * - `XXX-2`: The color used mainly for hover state of the button.
 *
 * - `XXX-3`: The color for solid background, such as bg color of the button.
 *   It must satisfy the contrast ratio with pure white (#ffffff) text on
 *   top of it.
 *
 * - `XXX-soft`: The color used for subtle background such as custom container
 *   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
 *   on top of it.
 *
 *   The soft color must be semi transparent alpha channel. This is crucial
 *   because it allows adding multiple "soft" colors on top of each other
 *   to create a accent, such as when having inline code block inside
 *   custom containers.
 *
 * - `default`: The color used purely for subtle indication without any
 *   special meanings attached to it such as bg color for menu hover state.
 *
 * - `brand`: Used for primary brand colors, such as link text, button with
 *   brand theme, etc.
 *
 * - `tip`: Used to indicate useful information. The default theme uses the
 *   brand color for this by default.
 *
 * - `warning`: Used to indicate warning to the users. Used in custom
 *   container, badges, etc.
 *
 * - `danger`: Used to show error, or dangerous message to the users. Used
 *   in custom container, badges, etc.
 * -------------------------------------------------------------------------- */

:root {
  --vp-layout-max-width: 784px;
  --vp-c-default-1: var(--vp-c-gray-1);
  --vp-c-default-2: var(--vp-c-gray-2);
  --vp-c-default-3: var(--vp-c-gray-3);
  --vp-c-default-soft: var(--vp-c-gray-soft);

  --vp-c-brand-1: var(--vp-c-indigo-1);
  --vp-c-brand-2: var(--vp-c-indigo-2);
  --vp-c-brand-3: var(--vp-c-indigo-3);
  --vp-c-brand-soft: var(--vp-c-indigo-soft);

  --vp-c-tip-1: var(--vp-c-brand-1);
  --vp-c-tip-2: var(--vp-c-brand-2);
  --vp-c-tip-3: var(--vp-c-brand-3);
  --vp-c-tip-soft: var(--vp-c-brand-soft);

  --vp-c-warning-1: var(--vp-c-yellow-1);
  --vp-c-warning-2: var(--vp-c-yellow-2);
  --vp-c-warning-3: var(--vp-c-yellow-3);
  --vp-c-warning-soft: var(--vp-c-yellow-soft);

  --vp-c-danger-1: var(--vp-c-red-1);
  --vp-c-danger-2: var(--vp-c-red-2);
  --vp-c-danger-3: var(--vp-c-red-3);
  --vp-c-danger-soft: var(--vp-c-red-soft);

  --vp-code-color: var(--vp-c-text-1);
}

/**
 * Component: Button
 * -------------------------------------------------------------------------- */

:root {
  --vp-button-brand-border: transparent;
  --vp-button-brand-text: var(--vp-c-white);
  --vp-button-brand-bg: var(--vp-c-brand-3);
  --vp-button-brand-hover-border: transparent;
  --vp-button-brand-hover-text: var(--vp-c-white);
  --vp-button-brand-hover-bg: var(--vp-c-brand-2);
  --vp-button-brand-active-border: transparent;
  --vp-button-brand-active-text: var(--vp-c-white);
  --vp-button-brand-active-bg: var(--vp-c-brand-1);
}

@media (min-width: 640px) {
  :root {
    --vp-home-hero-image-filter: blur(56px);
  }
}

@media (min-width: 960px) {
  :root {
    --vp-home-hero-image-filter: blur(68px);
  }
}

/**
 * Component: Custom Block
 * -------------------------------------------------------------------------- */

:root {
  --vp-custom-block-tip-border: transparent;
  --vp-custom-block-tip-text: var(--vp-c-text-1);
  --vp-custom-block-tip-bg: var(--vp-c-brand-soft);
  --vp-custom-block-tip-code-bg: var(--vp-c-brand-soft);
}

html {
  --c-scrollbar: #eee;
  --c-scrollbar-hover: #bbb
}

::-moz-selection {
  background: var(--vp-c-brand-soft);
}

::selection {
  background: var(--vp-c-brand-soft);
}

html.dark {
  --c-scrollbar: #222;
  --c-scrollbar-hover: #333
}

::-webkit-scrollbar {
  width: 8px
}

::-webkit-scrollbar:horizontal {
  height: 8px
}

::-webkit-scrollbar-track,
::-webkit-scrollbar-corner {
  background: var(--vp-c-bg);
  border-radius: 8px
}

::-webkit-scrollbar-thumb {
  background: var(--c-scrollbar);
  border-radius: 8px
}

::-webkit-scrollbar-thumb:hover {
  background: var(--c-scrollbar-hover)
}

body {
  overflow-y: scroll;
}

@media (min-width: 768px) {
  .VPNavBarSearch {
    flex-grow: 0;
  }
}

#VPContent {
  view-transition-name: content;
}

::view-transition-old(content) {
  animation: fade-out 0.2s ease forwards;
  opacity: 1;
}

::view-transition-new(content) {
  animation: blur-fade-in 0.4s ease-in-out 0.2s forwards;
  opacity: 0;
}

.VPNavBar {
  .divider {
    display: none;
  }

  .VPNavBarMenuLink {
    color: var(--vp-c-text-2);

    &:hover, &.active {
      color: var(--vp-c-text-1);
    }
  }
}

.VPNavScreen {
  .VPNavScreenMenuLink {
    color: var(--vp-c-text-2);

    &:hover, &.active {
      color: var(--vp-c-text-1);
    }
  }
}

.VPFooter {
  border-top: 0 !important;
}

.vp-doc {
  h2 {
    border-top: 0;
    padding-top: 0;
    margin-top: 32px;
  }

  a {
    color: var(--vp-c-text-1);
    text-decoration-color: var(--vp-c-gray-3);
    transition: all 0.2s ease-in-out;

    &:hover {
      color: var(--vp-c-text-1);
      text-decoration-color: var(--vp-c-text-2);
    }
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes blur-fade-in {
  0% {
    opacity: 0;
    filter: blur(8px)
  }

  50% {
    opacity: .5;
    filter: blur(2px)
  }

  100% {
    opacity: 1;
    filter: blur(0)
  }
}

@keyframes spin {
  100% {
    transform: rotate(1turn)
  }
}

/* Content */
.VPDoc {
  blockquote {
    margin-left: -20px;
    border-left-width: 4px;
  }
}